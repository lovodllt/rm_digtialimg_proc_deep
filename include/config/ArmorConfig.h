//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the rm_digtialimg_proc package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __rm_digtialimg_proc__ARMORCONFIG_H__
#define __rm_digtialimg_proc__ARMORCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace rm_digtialimg_proc_deep
{
  class ArmorConfigStatics;

  class ArmorConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(ArmorConfig &config, const ArmorConfig &max, const ArmorConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const ArmorConfig &config1, const ArmorConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, ArmorConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const ArmorConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, ArmorConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const ArmorConfig &config) const = 0;
      virtual void getValue(const ArmorConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T ArmorConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T ArmorConfig::* field;

      virtual void clamp(ArmorConfig &config, const ArmorConfig &max, const ArmorConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const ArmorConfig &config1, const ArmorConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, ArmorConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const ArmorConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, ArmorConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const ArmorConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const ArmorConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, ArmorConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, ArmorConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<ArmorConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(ArmorConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("target_option"==(*_i)->name){target_option = boost::any_cast<int>(val);}
        if("select_bar"==(*_i)->name){select_bar = boost::any_cast<int>(val);}
        if("is_bar_debug"==(*_i)->name){is_bar_debug = boost::any_cast<bool>(val);}
        if("is_armor_debug"==(*_i)->name){is_armor_debug = boost::any_cast<bool>(val);}
        if("is_classfy_debug"==(*_i)->name){is_classfy_debug = boost::any_cast<bool>(val);}
        if("max_angle"==(*_i)->name){max_angle = boost::any_cast<double>(val);}
        if("min_lw_ratio"==(*_i)->name){min_lw_ratio = boost::any_cast<double>(val);}
        if("max_lw_ratio"==(*_i)->name){max_lw_ratio = boost::any_cast<double>(val);}
        if("min_pixel_contained_ratio"==(*_i)->name){min_pixel_contained_ratio = boost::any_cast<double>(val);}
        if("max_bars_ratio"==(*_i)->name){max_bars_ratio = boost::any_cast<double>(val);}
        if("min_bars_distance"==(*_i)->name){min_bars_distance = boost::any_cast<double>(val);}
        if("max_bars_distance"==(*_i)->name){max_bars_distance = boost::any_cast<double>(val);}
        if("max_bars_angle"==(*_i)->name){max_bars_angle = boost::any_cast<double>(val);}
        if("max_bars_y_dis"==(*_i)->name){max_bars_y_dis = boost::any_cast<double>(val);}
        if("select_by_last"==(*_i)->name){select_by_last = boost::any_cast<bool>(val);}
        if("warp_thresh"==(*_i)->name){warp_thresh = boost::any_cast<double>(val);}
        if("gamma"==(*_i)->name){gamma = boost::any_cast<bool>(val);}
        if("contrast_alpha"==(*_i)->name){contrast_alpha = boost::any_cast<double>(val);}
        if("contrast_beta"==(*_i)->name){contrast_beta = boost::any_cast<double>(val);}
        if("gamma_y"==(*_i)->name){gamma_y = boost::any_cast<double>(val);}
        if("rotate"==(*_i)->name){rotate = boost::any_cast<bool>(val);}
        if("id_confidence"==(*_i)->name){id_confidence = boost::any_cast<double>(val);}
        if("use_id_cls"==(*_i)->name){use_id_cls = boost::any_cast<bool>(val);}
        if("is_large_armor_store"==(*_i)->name){is_large_armor_store = boost::any_cast<bool>(val);}
        if("min_id_white_ratio"==(*_i)->name){min_id_white_ratio = boost::any_cast<double>(val);}
        if("max_id_white_ratio"==(*_i)->name){max_id_white_ratio = boost::any_cast<double>(val);}
      }
    }

    int target_option;
int select_bar;
bool is_bar_debug;
bool is_armor_debug;
bool is_classfy_debug;
double max_angle;
double min_lw_ratio;
double max_lw_ratio;
double min_pixel_contained_ratio;
double max_bars_ratio;
double min_bars_distance;
double max_bars_distance;
double max_bars_angle;
double max_bars_y_dis;
bool select_by_last;
double warp_thresh;
bool gamma;
double contrast_alpha;
double contrast_beta;
double gamma_y;
bool rotate;
double id_confidence;
bool use_id_cls;
bool is_large_armor_store;
double min_id_white_ratio;
double max_id_white_ratio;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int target_option;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int select_bar;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool is_bar_debug;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool is_armor_debug;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool is_classfy_debug;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_angle;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_lw_ratio;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_lw_ratio;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_pixel_contained_ratio;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_bars_ratio;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_bars_distance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_bars_distance;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_bars_angle;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_bars_y_dis;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool select_by_last;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double warp_thresh;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool gamma;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double contrast_alpha;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double contrast_beta;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double gamma_y;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool rotate;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double id_confidence;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool use_id_cls;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool is_large_armor_store;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double min_id_white_ratio;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double max_id_white_ratio;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("ArmorConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const ArmorConfig &__max__ = __getMax__();
      const ArmorConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const ArmorConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const ArmorConfig &__getDefault__();
    static const ArmorConfig &__getMax__();
    static const ArmorConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const ArmorConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void ArmorConfig::ParamDescription<std::string>::clamp(ArmorConfig &config, const ArmorConfig &max, const ArmorConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class ArmorConfigStatics
  {
    friend class ArmorConfig;

    ArmorConfigStatics()
    {
ArmorConfig::GroupDescription<ArmorConfig::DEFAULT, ArmorConfig> Default("Default", "", 0, 0, true, &ArmorConfig::groups);
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.target_option = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.target_option = 2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.target_option = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<int>("target_option", "int", 0, "", "{'enum': [{'name': 'ARMOR_ALL', 'type': 'int', 'value': 0, 'srcline': 10, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'ARMOR_ALL', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'ARMOR_OUTPOST_BASE', 'type': 'int', 'value': 1, 'srcline': 11, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'ARMOR_OUTPOST_BASE', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'ARMOR_WITHOUT_OUTPOST_BASE', 'type': 'int', 'value': 2, 'srcline': 12, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'ARMOR_WITHOUT_OUTPOST_BASE', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'type'}", &ArmorConfig::target_option)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<int>("target_option", "int", 0, "", "{'enum': [{'name': 'ARMOR_ALL', 'type': 'int', 'value': 0, 'srcline': 10, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'ARMOR_ALL', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'ARMOR_OUTPOST_BASE', 'type': 'int', 'value': 1, 'srcline': 11, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'ARMOR_OUTPOST_BASE', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'ARMOR_WITHOUT_OUTPOST_BASE', 'type': 'int', 'value': 2, 'srcline': 12, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'ARMOR_WITHOUT_OUTPOST_BASE', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'type'}", &ArmorConfig::target_option)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.select_bar = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.select_bar = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.select_bar = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<int>("select_bar", "int", 0, "", "{'enum': [{'name': 'Pass', 'type': 'int', 'value': 0, 'srcline': 15, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'Pass', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Select', 'type': 'int', 'value': 1, 'srcline': 16, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'Select', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'type'}", &ArmorConfig::select_bar)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<int>("select_bar", "int", 0, "", "{'enum': [{'name': 'Pass', 'type': 'int', 'value': 0, 'srcline': 15, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'Pass', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Select', 'type': 'int', 'value': 1, 'srcline': 16, 'srcfile': '/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg', 'description': 'Select', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'type'}", &ArmorConfig::select_bar)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.is_bar_debug = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.is_bar_debug = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.is_bar_debug = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("is_bar_debug", "bool", 0, "", "", &ArmorConfig::is_bar_debug)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("is_bar_debug", "bool", 0, "", "", &ArmorConfig::is_bar_debug)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.is_armor_debug = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.is_armor_debug = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.is_armor_debug = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("is_armor_debug", "bool", 0, "", "", &ArmorConfig::is_armor_debug)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("is_armor_debug", "bool", 0, "", "", &ArmorConfig::is_armor_debug)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.is_classfy_debug = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.is_classfy_debug = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.is_classfy_debug = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("is_classfy_debug", "bool", 0, "", "", &ArmorConfig::is_classfy_debug)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("is_classfy_debug", "bool", 0, "", "", &ArmorConfig::is_classfy_debug)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_angle = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_angle = 65.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_angle = 55.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_angle", "double", 0, "", "", &ArmorConfig::max_angle)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_angle", "double", 0, "", "", &ArmorConfig::max_angle)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_lw_ratio = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_lw_ratio = 4.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_lw_ratio = 2.4;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("min_lw_ratio", "double", 0, "", "", &ArmorConfig::min_lw_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("min_lw_ratio", "double", 0, "", "", &ArmorConfig::min_lw_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_lw_ratio = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_lw_ratio = 20.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_lw_ratio = 14.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_lw_ratio", "double", 0, "", "", &ArmorConfig::max_lw_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_lw_ratio", "double", 0, "", "", &ArmorConfig::max_lw_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_pixel_contained_ratio = 0.4;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_pixel_contained_ratio = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_pixel_contained_ratio = 0.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("min_pixel_contained_ratio", "double", 0, "", "", &ArmorConfig::min_pixel_contained_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("min_pixel_contained_ratio", "double", 0, "", "", &ArmorConfig::min_pixel_contained_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_bars_ratio = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_bars_ratio = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_bars_ratio = 1.6;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_bars_ratio", "double", 0, "", "", &ArmorConfig::max_bars_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_bars_ratio", "double", 0, "", "", &ArmorConfig::max_bars_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_bars_distance = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_bars_distance = 5.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_bars_distance = 0.45;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("min_bars_distance", "double", 0, "", "", &ArmorConfig::min_bars_distance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("min_bars_distance", "double", 0, "", "", &ArmorConfig::min_bars_distance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_bars_distance = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_bars_distance = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_bars_distance = 2.45;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_bars_distance", "double", 0, "", "", &ArmorConfig::max_bars_distance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_bars_distance", "double", 0, "", "", &ArmorConfig::max_bars_distance)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_bars_angle = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_bars_angle = 90.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_bars_angle = 12.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_bars_angle", "double", 0, "", "", &ArmorConfig::max_bars_angle)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_bars_angle", "double", 0, "", "", &ArmorConfig::max_bars_angle)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_bars_y_dis = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_bars_y_dis = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_bars_y_dis = 0.5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_bars_y_dis", "double", 0, "", "", &ArmorConfig::max_bars_y_dis)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_bars_y_dis", "double", 0, "", "", &ArmorConfig::max_bars_y_dis)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.select_by_last = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.select_by_last = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.select_by_last = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("select_by_last", "bool", 0, "", "", &ArmorConfig::select_by_last)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("select_by_last", "bool", 0, "", "", &ArmorConfig::select_by_last)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.warp_thresh = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.warp_thresh = 255.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.warp_thresh = 100.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("warp_thresh", "double", 0, "", "", &ArmorConfig::warp_thresh)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("warp_thresh", "double", 0, "", "", &ArmorConfig::warp_thresh)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gamma = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gamma = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gamma = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("gamma", "bool", 0, "", "", &ArmorConfig::gamma)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("gamma", "bool", 0, "", "", &ArmorConfig::gamma)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.contrast_alpha = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.contrast_alpha = 255.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.contrast_alpha = 15.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("contrast_alpha", "double", 0, "", "", &ArmorConfig::contrast_alpha)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("contrast_alpha", "double", 0, "", "", &ArmorConfig::contrast_alpha)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.contrast_beta = -255.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.contrast_beta = 255.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.contrast_beta = -150.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("contrast_beta", "double", 0, "", "", &ArmorConfig::contrast_beta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("contrast_beta", "double", 0, "", "", &ArmorConfig::contrast_beta)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gamma_y = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gamma_y = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gamma_y = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("gamma_y", "double", 0, "", "", &ArmorConfig::gamma_y)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("gamma_y", "double", 0, "", "", &ArmorConfig::gamma_y)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.rotate = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.rotate = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.rotate = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("rotate", "bool", 0, "whether rotate", "", &ArmorConfig::rotate)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("rotate", "bool", 0, "whether rotate", "", &ArmorConfig::rotate)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.id_confidence = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.id_confidence = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.id_confidence = 0.9;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("id_confidence", "double", 0, "", "", &ArmorConfig::id_confidence)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("id_confidence", "double", 0, "", "", &ArmorConfig::id_confidence)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.use_id_cls = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.use_id_cls = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.use_id_cls = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("use_id_cls", "bool", 0, "", "", &ArmorConfig::use_id_cls)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("use_id_cls", "bool", 0, "", "", &ArmorConfig::use_id_cls)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.is_large_armor_store = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.is_large_armor_store = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.is_large_armor_store = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("is_large_armor_store", "bool", 0, "", "", &ArmorConfig::is_large_armor_store)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<bool>("is_large_armor_store", "bool", 0, "", "", &ArmorConfig::is_large_armor_store)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_id_white_ratio = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_id_white_ratio = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_id_white_ratio = 0.001;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("min_id_white_ratio", "double", 0, "", "", &ArmorConfig::min_id_white_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("min_id_white_ratio", "double", 0, "", "", &ArmorConfig::min_id_white_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_id_white_ratio = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_id_white_ratio = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_id_white_ratio = 0.8;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_id_white_ratio", "double", 0, "", "", &ArmorConfig::max_id_white_ratio)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ArmorConfig::AbstractParamDescriptionConstPtr(new ArmorConfig::ParamDescription<double>("max_id_white_ratio", "double", 0, "", "", &ArmorConfig::max_id_white_ratio)));
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(ArmorConfig::AbstractGroupDescriptionConstPtr(new ArmorConfig::GroupDescription<ArmorConfig::DEFAULT, ArmorConfig>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<ArmorConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<ArmorConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<ArmorConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    ArmorConfig __max__;
    ArmorConfig __min__;
    ArmorConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const ArmorConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static ArmorConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &ArmorConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const ArmorConfig &ArmorConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const ArmorConfig &ArmorConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const ArmorConfig &ArmorConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<ArmorConfig::AbstractParamDescriptionConstPtr> &ArmorConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<ArmorConfig::AbstractGroupDescriptionConstPtr> &ArmorConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const ArmorConfigStatics *ArmorConfig::__get_statics__()
  {
    const static ArmorConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = ArmorConfigStatics::get_instance();

    return statics;
  }

//#line 10 "/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg"
      const int Armor_ARMOR_ALL = 0;
//#line 11 "/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg"
      const int Armor_ARMOR_OUTPOST_BASE = 1;
//#line 12 "/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg"
      const int Armor_ARMOR_WITHOUT_OUTPOST_BASE = 2;
//#line 15 "/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg"
      const int Armor_Pass = 0;
//#line 16 "/home/haomo/catkin_ws/src/rm_visplugin/rm_digtialimg_proc/cfg/Armor.cfg"
      const int Armor_Select = 1;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __ARMORRECONFIGURATOR_H__
